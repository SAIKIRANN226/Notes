"Putty" to connect to servers
------------------------------
In previous sessions,we learned how authentication is happened while connecting to the linux servers
in gitbash,ofcousre it is using ssh in the background,here in putty also obviously should go 
1. Username
2. Privatekey/Password
3. IP_address
If we give above three what will putty do in background ? so putty will take above three and it 
will issue a command "ssh -i <path-to-privatekey> username@IP".In gitbash we call privatekey as 
".pem" format, but in putty ".ppk" format(putty privatekey)

Open puttygen
--------------
1. Load .pem file
2. Click on save privatekey with .ppk extension
3. Open putty --> connection ---> ssh ---> auth ---> credentials ---> load privatkey.ppk
4. Connection ---> data ---> username(ec2-user) ---> then go to session and save
5. Create a server in aws and take the IP and paste it in putty(hostname) click on load
6. To change the font open putty ---> appearence ---> change and then save
We have extension for putty that is super putty, just create one server in aws and connect in the 
superputty try to install nginx,enable,start and check the IP in chrome if it is showing nginix (or) not,
so where the html files will load in nginx ?  "/usr/share/nginx/html", we have index.html file 
so to go this folder "sudo su -" then cd usr/share/nginx/html, here we can also put your own short 
html format which should do in the server only

1. Remove default index.html file in the server "rm index.html"
2. Open winscp double click on the path location on top, which is in grey colour and paste the 
   "/usr/share/nginx/html"
3. Drag and drop the html files and folder to the right side mini windows in linux server
4. You will get error while copy paste "permission is denied"
5. ls -l and check html folder has write access to others ? 
6. chmod o+w -R html/
7. Makesure to restart nginx when you add any files to the folder

Steps to install nginx (or) any other packages
-----------------------------------------------
1. sudo su -
2. yum install nginx -y
3. systemctl enable nginx
4. systemctl start nginx
5. systemctl status nginx
6. systemctl restart nginx

Linux file system structure
----------------------------
"This PC" in windows, in linux we have "cd /"
boot ---> When server is getting started, server refers this directory and config from grub.config
dev ---> External devices are mounted here expect motherboard
etc ---> Extra configuration 
lib ---> Libraries which consists of ".dll" extension
home ---> All user directories are created here
media ---> C-drive , D-drive
mnt ---> Extra disk mounted here
opt ---> Optional manual installation of servers or applications will be downloaded here
proc ---> Running processes will be stored here with PID
root ---> Home folder
run ---> When server starts uses this directory
bin ---> Stores commands like cat,vim,touch,cd etc.
sbin ---> System commands like root access
tmp ---> Temporory files not important files stored here
usr ---> All users will be here
var ---> Variables,log files
When putty stucks then open putty first load your session then go to connection ---> give 30 in seconds
then go to session and save, generally we have value 0 you need to give any value like 30, that means 
every 30 seconds connection will be alive, you can give maximum 300

Symlink and hardlink(1:01:31)
------------------------------
Linux servers (or) computers they dont understand names,they understand only numbers
Inode is the representation of file and folder inside the memory(it is a number),so if you create a file and try ls -i then there is pointer with some number that is nothing file location,we dont have idea where that location is. that is handled by kernel

Symlink ---> is nothing but a shortcut which targets the actual location. in the sameway we can also create a shortcut for a file by "ln -s <source-where is your file> <destination path>"  usage is "ln -s /home/ec2-user/hello /tmp/hello-soft"--->L=linked file,s=symbolic,here symlink point to different inode but location is always pointing to actual file,if we delete this file we lose link,but not with hardlink it is directly dealing with memory what ever the hardlinks or files to inode it will check for the reference untill unless all the linked files are delete 
Symlink and actual file have their own inodes to check this "ls -li"

But hardlink actual file and hardlink both are point to inode,how to give hardlink? "ln /home/ec2-user/hello hello-hard" if you dont give "s" it will become hardlink

Points to remember
*******************
1. We use nginx as front-end servers because it can handle high traffic, it is often used as a 
   reverse proxy, we used nginx only in all sessions
2. IIS is only used for windows based infrastructure
3. We have "winscp" for file transfer, it is a mini windows for linux server 
4. Generally frontend servers called as http servers open port No:80 ,hosts html (or) java 
   based applications
5. Backend is also http servers but port No:8080, hosts like tomcat,jboss,.net,python etc.
6. These frontend and back will connect through API's
