Note:-If you are facing push error in the github you can forcefull push by using 
"git push -f origin master"

Locals
-------
Count.index will not have access in the locals,we can only put in the count.tf,basically expressions,conditions,functions can be put in the locals,then how to call a local? "local.instance_type"

Data-sources(VS)
-----------------
Terraform is connecting to lot of providers like aws,azure,gcp and everything,so these providers contains lot of data like regions,availability zones,ec2 etc. All these are changing dynamically,so data-source is used to query the data dynamically from the providers,aswel as from the existing resources,using this information we can create another resources also
Example:-AMI's ID's will be changing when ever there is a new patch released by the aws,so to fetch ami automatically using data-source. just search in the google "Terraform query"

Foreach loop(VS)
-----------------
1.Conditions ---> mostly to iterate list for list we used count and count.index(special vars)
2.Foreach ---> mostly to iterate maps for maps we used that is "for_each"
3.Dynamic loop ---> creating a resources multiple times we used count,and foreach loop example creating instances and route53 records,so in the securityGroup if you want to add a new rule (or) multiple ports likes 80,443,22 in ingress (or) egress blocks so that block will be repeating as many rules you want to add.if a block is repeating more times you can keep that block in a variable and call dynamic loop

Terraform state(State and remote state)
----------------------------------------
What is the terraform responsibility? what ever we write it will create ---> declarative
1.Declarative state = Our desired state
2.Current state is Whatever terraform has created in "terraform.tfstate"
3.Desired == Current state should be equal

# If you do terraform apply again then terraform will check current state,if current state = 
  desired state then it will not take any action
# If current state is not equal to desired state then it will create
# terraform.tfstate is in my laptop iam pushing it to the github,another devops engineer 
  cloned my repo and run it again,both are running terraform apply,so here duplicates may 
  come,some got error as already exists.i have terraform.tfstate and devops engineer has 
  terraform.tfstate.so for this we have central state file to check the infra exists or not.
# terraform.tfstate is a crucial file,should not delete
# Collabaration ---> terraform will have no idea about the infra created,if multiple persons 
  are working on same infra it will try to create duplicates and errors may also come and 
  another disadvantage is security. tfstate is a crucial file if you keep it in local it may 
  deleted or updated by mistake,so for that we have central state that is "s3 bucket"(remote
  storage)

Create a s3 bucket
-------------------
Bucket name should be unique

Lock the bucket
----------------
By using "dynamodb" ---> create table to lock the bucket and make sure partion key should be in the same letters = "LockID"
Just type in google terraform s3 remote state and take that configuration and put it in VS it is backend inside provider