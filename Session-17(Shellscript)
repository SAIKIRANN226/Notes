Crontab is for deleting old log files
--------------------------------------
It is used for scheduling the scripts instead of logging manually, to delete old log files it will 
target a particular directory which consist of more than 14 days old with ".log" extension only, 
but crontab has a particular syntax which consist of 5 stars like " 5 4 * * * " go and check crontab 
guru website and you can see the examples provided in the website itself, Just see the crontab linux
example in the same website

Usage of crontab and giving the location
-----------------------------------------
"crontab -e" and press enter this command should be run in the server, -e is editing just 
enter 5 stars as of now <stars and script location> below is the example of usage
"* * * * * sh /home/centos/shell-script/15.delete-old-logs.sh" this line should be entered in the 
editor and Script location generally we give absolute path and save the file :wq! 
To see logs "tail -f /var/log/cron"  

What is crontab ?
------------------
Crontab is used to schedule the scripts we will trigger to delete old log files everyday in our servers

Shellscript optargs 18-greetings.sh
------------------------------------
Generally we saw args like $1,$2 etc. Nothing but sending the arguments as options, like for example
groupadd -aG, -aG is nothing but options.

Shellscript as a Native linux command
--------------------------------------
If you want to run the shellscript as a native command linux instead of "sh 18-greetings.sh" we have
path for every operating system "echo $PATH" nothing but if you install any softwares in these PATHS
automatically windows (or) linux will pick up from this PATH, So you need to keep script in that PATH
If you put your script in "/usr/local/bin" you no need to give "sh" while running the script.
So "sudo cp 18-greetings.sh /usr/local/bin/greeting(copied as a greeting name), and you need to give
executive access by "sudo chmod +x /usr/local/bin/greeting", Now if you are in any folder otherthan 
the script folder just run by using name "greeting" (or) greeting -n sai -w "good evening", do this steps
in "cd 18-greetings.sh location"

Automating the creation of aws instances and route53 records
-------------------------------------------------------------
1. We need to create ec2 instance using manually 
2. mongodb,mysql,shipping t3.small remaining t2.micro
3. Creating route53 records, if web PublicIP, if not web PrivateIP

We need to write a script for the above manually steps to automate, for this we have "aws command line"
nothing but creating instances from aws command line instead of aws console, Before this we need to have authentication, We have IAM in this IAM we have Authentication and Authorization, In every server we
have aws command line
Authentication --> You have username/password, you can go to common area in the company
Authorization ---> You need to prove your authorization to enter in to the project bays, in other words
                   like permissions, different permissions for TL,Manager,Sr,Engineer etc. we call these
                   as ROLES, these roles will be changing every year (or) few years after, Persmissions
                   are tagged to these roles. like for example
Team Manager ---> Has super admin
Team Lead ---> Has admin
Senior Engineers ---> Normal access
Trainee ---> Just read access 

Authentication 
---------------
Here User is a person and he has Username/Password

Authorization
--------------
Here Role and Permissions, What is the role of user ? and what are the Persmissions attached to that role

Permissions
------------
We have nouns and verbs
We have resources in aws ---> Ec2,vpc,route53,cdn,IAM etc. In this resources we have
                              Nouns ---> web,catalogue,cart,hostedzone etc.
                              Verbs (or) actions ---> create resource,update,delete nothing but CRUD.

We can give authorization like below
-------------------------------------
Sivakumar(Trainee) ----> EC2(resource) ---> Web(instance) ---> READ access only
Manish(Junior DevOps) ----> EC2(resource) ---> Web(instance) ---> READ and UPDATE access only
Mahesh(Senior Engineer) ---> EC2(resource) ---> Web(instance) ---> READ and "CRU" access not delete
Aditya(Team Lead) ----> EC2(resource) ---> All instances ---> READ and "CRU" access only not delete
Suman(Team manager) ----> EC2(resource) ---> All instances ---> READ and "CRUD" including delete

Not only for persons, Resources should also have access to access another resource, For that we have 
"roles to resources" like for example if you have created one EC2 and this EC2 instance should go and 
create other new instances (or) route53 records, So we need to give role to the EC2 by going to IAM 
click on roles create role and select EC2 as a use case/next/amazonEc2fullaccess/

Command to create instance 
---------------------------
aws ec2 run-instances --image-id ami-xxxxxxxx --count 1 --instance-type t2.micro --security-group-ids sg-903004f8. You will get error "Unable to locate credentials, you can configure by "aws configure". So 
Create one user and configure it by going to IAM/Users/Create user/Attach policies directly/Administrator 
Access/Click on the create user/Security credentials/Create accesskey/CLI and then "aws configure". Now
try to create instance using above command in server, Here if it is a person he can keep it secrectly
but what if EC2 can keep it secret these credentials? If anybody has access to this EC2 he can able to 
see these credentials using ls -la in cd .aws/ in credentials. So thats why create a role for EC2 by
going to IAM/roles/create role/select EC2 in usecase/you can give admin access also (or) amazonec2 full
access and also give route53 full access/give a role name/. Now select the already created instance
and Actions/Security/Modify IAM role/Select your create role, So that this Ec2 instance will create 
another EC2 instances and also update route 53 records aswel for that only we have created role to the 
instance EC2, If you get the same error remove the credentials in .aws folder by using rm -rf command

Algorithm for all instances and route53 records at a time (roboshop.sh in Roboshop-Shellscript)
------------------------------------------------------------------------------------------------
1. Instance creation using "aws ec2 run-instances --image-id ami-xxxxxxxx --count 1 
   --instance-type t2.micro --security-group-ids sg-903004f8 --tag-specifications 
  "ResourceType=instance,Tags=[{Key=Name,Value=$i}]" --query 'Instances[0].PrivateIpAddress'
  --output text 
2. mongodb,mysql,shipping then t3.small otherwise t2.micro, So write if condition
3. We need IP address to create route 53 records

Improvements
-------------
We can also improve above script like 
1. If web get publicIP and create records
2. Check if records already exists, If exists update, If not exists then create

Points to remember
*******************
1. To see the logs of crontab "tail -f /var/log/cron" 
2. Instance creating another instances we have two ways
   a) Create one user and aws configure
   b) Create a role and attach to this instance
3. Go through "roboshop.sh" in vs
