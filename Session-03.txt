Permissions
------------
Important concept we use this heavily
To practice the permissions create one server in aws and connect to it through keypair in gitbash,in that take any file or create a file using touch then try "ls-l" you have a file with some notation that is


-rw-rw-r--

-             rw-            rw-            r--
file          user          group          others
               u              g              o

we have three permissions like R,W,X (Read,Write,Execution access is used to run commands and shellscripts)
In linux when you create a user a group with same name will be created


To give execution permission to user then "chmod u+x <file-name>"
Only for owner then "chmod g-rw <file-name>"
To give access to all users to all groups then "chmod ugo+r <file-name>"
To remove write access to a group and inside it then "chmod g-w -R <group-name>"


R--->4
W--->2
X--->1

Example:-

u--->RWX
g--->R
o--->0

then "chmod 740 <file-name>"



User management
------------------
Creating users and giving access to the servers with password authentication mechanism
-----------------------------------------------------------------------------------------
Example:-

Ramhesh joined DevOps team
1.create user by "useradd <user-name>",here you will get permission denied so add with root user by "sudo su -" or "sudo useradd <user-name>"
2.create password for ramesh by "passwd ramesh",to whether user is created or not we can check all user entries in "cat /etc/passwd"
here userID is the first number and second number is the group ID (or) to get clear details just "id ramesh"
to get groups "getent group"


If this person wants to login to the server(ip address) we need to change a configuration by going to "vim /etc/ssh/sshd_config" , Here by default linux is disabled for loginthrough password authentication no , so make this yes, then "systemctl restart sshd" ---> must restart the service 

"sshd -t" will let you know any mistakes have done in the previous


So now how will ramhesh login to the server?
"ssh ramhesh@IP"



Creating users and giving access to the servers with ssh access through privatekey authentication mechanism
--------------------------------------------------------------------------------------------------------------
1.create raheem user
2.i will ask the raheem to give his public key
3.cd /home/raheem/   ...here we will create folder "mkdir .ssh" create a file inside .ssh "vim authorised_key"paste the raheem public key here "chmod 400 authorised_key"and give "chmod -R 700 .ssh" and change the ownership also "chown -R raheem:raheem .ssh"

we will tell raheem that your username is configured and we will give him the IP then raheem will "ssh -i raheem raheem@IP"

Group
------
"groupadd <group-name>"  ---> groupadd DevOps

add ramhesh to the DevOps group by "usermod -g DevOps ramesh"


"chown" ---> even file owner also cannot run this command,onyl sudo user can change the ownership,so change the ownership "chown <user>:<group> <file-name>"
          "chown <user>:<group> -R <folder-name>"


we will create testing group and give ramesh access to testing group for temporory by "usermod -gG testing ramhesh"
a = primary group(appending)
G = Secondary group(used for giving temp access)

after his work is done to remove ramesh by "gpasswd -d testing ramesh" deletes ramesh from testing group,if ramesh exit from the company then make sure he logout from the server and "groupdel ramesh"


useradd --help

Not only we can do this usermanagment using shellscript also by automating



Process management:-
------------------------
Everything in linux is process,a process id is created and report back

work will come from high level to low level

"ps"--->command

example i need to create a process id of "echo hello"
2345 ---> result is given to the bash terminal 3720


To know alll process id's "ps -ef"
To know if any particular process is running or not "ps -ef | grep jenkins"
To block the screen "sleep10"
We have two process
foreground process--->block terminal
background process--->background running but not block(sleep20 &)

when process struct kill the process ---> "kill PID" do not kill parent process id firstone is PID second one is parent id.even kill cannot kill then forcefull terminate "kill -9 PID"

This is generally used for troubleshooting,for example if nodejs project is not running we need to check wether it is running or not 



Package management
-------------------------
To install packages get sudo access "sudo su -"
"yum"command is used to install packages which we can see in RHEL,fedora,centos,awslinux etc. but aws linux added onemore command that is "amazon-linux-extras" we can use both

"yum install <package-name>"
"yum list installed" to grep anything particular "yum list installed | grep git"
"yum list available" (or) to get wordcount "yum list available | wc -l"
"yum search <package-name>"
"yum remove <package-name> -y"


To install nginx "yum install nginx -y" (or) "amazon-linux-extras install nginx1 -y"































































































































