You should not do any changes or adding new files in server terminal, come one step back like after going to home folder(cd) like ~ ---> Here you can store the logs for practicing as siva showed in the terminal, here in terminal if you get any errors or not working properly you can delete that folder and again clone from the github

08-conditions.sh ("if" condition syntax)
=========================================
if (expression) {
   statement if expression is true
}
if (expression) {
   statement if expression is false
}

09-install-mysql.sh
====================
Installing multiple packages using shellscript

Algorithm for installing any package
-------------------------------------
1. Check user is root(or)not
2. If root
     proceed
   if not root
     stop and say run with root user
3. Now install mysql
4. Check installed properly or not
5. If success
     then good
   if not success
     then show what is the error

How to know if it is root user or not ? you just enter "id" in the server terminal with root access 
sudo -, There you can see root user has id zero (or) "id -u" then you get root ID,other than zero it is 
not root user. Shellscript wont stop if it faces error, it is our responsibility to stop and slove the 
error and then proceed,for that we have "exit status",that means we need to check previous command success 
or not for that we have special variable "$?" ---> if success it has "0" if failure "not 0"(otherthan 0 any number)

10-functions.sh
================
We can put the repeated code in the functions, generally we keep functions under VARIABLES, we give args to the shellscript similarly we need to give inputs to the functions also
You have run the script right? then where is that log ? there will be no logs in /var/log/messages,we need to store that logs otherwise we cannot troubleshoot,make sure you should not log in the current folder of server comeoutside and then do,this is just to show how it works rightnow

Redirections(> symbol is for output redirection)
-------------------------------------------------
ls -ltr > temp.log ---> storing ls -ltr log in a temp.log file,here output is not in terminal,it is in temp.log to view this "cat temp.log"

if you give a successfull(or)correct command(or)spelling mistake in commands like 
"ls -ltrrrrsd temp.log"
"any-command > temp.log"  ---> bydefault success output only stores here
1 ---> success = usage(ls -ltr 1> temp.log)
2 ---> failure = usage(ls -ltr 2> temp.log) ---> it is a success command because there is no spelling mistake, so it  wont be in the temp.log, if (ls -ljtsssfs 2> temp.log) now it will store because it is wrong(failure) command
&> ---> both wether it is success or not it will store in the temp.log
&>> ----> it will append the new log
To open the log file "less <logfile-name>"

Special Variables will work only in double qotes ""
-----------------------------------------------------
$? ---> checks wether the exit status of previous command is success or not
$0 ---> you will get script name
$1 ---> first argument
$2 ---> second so on ...
$N ---> Nth arg
$@ ---> all arguments
$# ---> to know how many args are passed

Colors
-------
RED ---> \e[31m
GREEN ---> \e[32m
YELLOW ---> \e[33m 
NORMAL ---> \e[0m      To enable colors option you need to give "-e"

Points to remember
-------------------
1. Make sure Repository name you create in github and windows folder should be same
