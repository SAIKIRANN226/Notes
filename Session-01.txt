What is computer ?
-------------------
Laptop
Mobile
Phone
Refrigerator
Washing machine etc..
We can call above all those also a computer because A computer has some characterstics like CPU,RAM,STORAGE etc. And when we connect these devices to internet(wifi) an IP address will be created to operate the computer (or) to compute with in the local and worldwide

www.facebook.com ---> Is a Server, based on the purpose like
TV is used for Channels
Mobile is user for calls
Similarly Server is used for hosting applications to serve users/clients

Client-Server Architecture
---------------------------
Client = Who is requesting information
Server = Who is giving information
Example:- Phone and laptop "viceversa" when transferring media 
Whole IT is a communication between clients and servers

Operating systems
------------------
Windows OS ---> A bridge between user and hardware 
User instructions ---> commands ---> 0/1 ---> hardware
OS will takcare of converting 0's and 1's

Windows vs Linux
-----------------
Windows ---> Graphics(Load increases on CPU,memory & everthing)
Linux ---> Servers world(No graphics,Faster,reliable,lesscost,stability,security comes from 
unix principles only)

How to connect Linux servers ?
-------------------------------
BOX = Linux server (or) Node
LOCK = Public key(should be in aws-server)
KEY = Private key(should be with you)

Authentication mechanisms to connect linux server
--------------------------------------------------
1. What you know ---> Username and Password
2. What you have ---> RSA tokens
3. What you are  ---> Palms,retina,fingerprints etc. for now we use second method(what you have),so we 
   use SSH(secure shell)

So here we need to generate (or) create a link between "LOCK and KEY" by using a command in gitbash 
"ssh-keygen -f <filename>" and press enter two times so there will be two files generated ".pub" and 
one more file with same name but "without extension" to unable extension go to controlpanel
file explorer options ---> view ---> unhide extensions for known files and then rename your private key 
with ".pem"

# Syntax for publickey is = ssh-rsa <code> Laptopname
# Syntax for privatekey is = BEGIN OPENSSH PRIVATE KEY <code> END OPENSSH PRIVATE KEY

So you have created a link now create a server in aws and connect to that server with these keys

Steps to connect to ssh-server with keys in the gitbash 
--------------------------------------------------------
1. Import keypair in aws by going to --> Network and security options --> keypairs --> actions and 
   import key pair without any gaps
2. Create a security group (firewall) for inbound ---> all traffic ---> 0.0.0.0/0(representation 
   of internet)
3. Launch instance with keypairs and take Amazon Linux 2AMI(HVM)

Take public IP and username is "ec2-user" and "privatekey"
{ssh -i <path-to-privatekey> username@IP} ===> usage {ssh -i saikiran.pem ec2-user@123.23.234.5} and this command should be enter in the gitbash in the pwd "c/Users/saikiran"

Gitbash ---> ssh client and also a mini linux
Protocol ---> ssh(we have different protocols like https,http etc.)
Port for ssh ---> 22
Ec2 server ---> ssh server

Cheapest region is "us-east-1" ---> latency(somewhat slow which is negligible). Every region has min 2 availability zones, Everything here we call as resources, like EC2(server). Where ever you are if you type CD and enter you will go to user directory. "clear" command will clear all the lines, when you open gitbash bydefault it will be in the "/c/Users/saikiran" when ever you stuck in the gitbash just enter "ctrl+c"

Absolute path and Relative path
--------------------------------
1. Absolute path ===> ssh -i /c/users/user/saikiran.pem ec2-user@IP (if you dont know where you are so give 
   from the starting)
2. Relative path ===> Just know where you are by PWD and then give the path from there like 
   "ssh -i saikiran.pem ec2-user@IP" when you are in user directory

$ ---> Normal user
# ---> Root user(sudo su -) to exit from root just "exit"
pwd ---> Present working directory you will be launched in /home/ec2-user
uname ---> will tell the kernel name
<command-name> --help ---> Get help from that particular command
Or you can get help from man command also ---> "man <command>"

Linux is not OS it is a kernel(49:35 to 58:38)
-----------------------------------------------
